package com.example.greenDao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import com.example.greenBean.StrategyGroupBean;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table STRATEGY_GROUP_BEAN.
*/
public class StrategyGroupBeanDao extends AbstractDao<StrategyGroupBean, String> {

    public static final String TABLENAME = "STRATEGY_GROUP_BEAN";

    /**
     * Properties of entity StrategyGroupBean.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property GroupId = new Property(0, String.class, "GroupId", true, "GROUP_ID");
        public final static Property SelectedImage = new Property(1, String.class, "SelectedImage", false, "SELECTED_IMAGE");
        public final static Property Description = new Property(2, String.class, "Description", false, "DESCRIPTION");
        public final static Property GroupName = new Property(3, String.class, "GroupName", false, "GROUP_NAME");
        public final static Property SortIndex = new Property(4, String.class, "SortIndex", false, "SORT_INDEX");
        public final static Property Image = new Property(5, String.class, "Image", false, "IMAGE");
    };


    public StrategyGroupBeanDao(DaoConfig config) {
        super(config);
    }
    
    public StrategyGroupBeanDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'STRATEGY_GROUP_BEAN' (" + //
                "'GROUP_ID' TEXT PRIMARY KEY NOT NULL ," + // 0: GroupId
                "'SELECTED_IMAGE' TEXT," + // 1: SelectedImage
                "'DESCRIPTION' TEXT," + // 2: Description
                "'GROUP_NAME' TEXT," + // 3: GroupName
                "'SORT_INDEX' TEXT," + // 4: SortIndex
                "'IMAGE' TEXT);"); // 5: Image
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'STRATEGY_GROUP_BEAN'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, StrategyGroupBean entity) {
        stmt.clearBindings();
 
        String GroupId = entity.getGroupId();
        if (GroupId != null) {
            stmt.bindString(1, GroupId);
        }
 
        String SelectedImage = entity.getSelectedImage();
        if (SelectedImage != null) {
            stmt.bindString(2, SelectedImage);
        }
 
        String Description = entity.getDescription();
        if (Description != null) {
            stmt.bindString(3, Description);
        }
 
        String GroupName = entity.getGroupName();
        if (GroupName != null) {
            stmt.bindString(4, GroupName);
        }
 
        String SortIndex = entity.getSortIndex();
        if (SortIndex != null) {
            stmt.bindString(5, SortIndex);
        }
 
        String Image = entity.getImage();
        if (Image != null) {
            stmt.bindString(6, Image);
        }
    }

    /** @inheritdoc */
    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public StrategyGroupBean readEntity(Cursor cursor, int offset) {
        StrategyGroupBean entity = new StrategyGroupBean( //
            cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // GroupId
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // SelectedImage
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // Description
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // GroupName
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // SortIndex
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5) // Image
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, StrategyGroupBean entity, int offset) {
        entity.setGroupId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setSelectedImage(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setDescription(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setGroupName(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setSortIndex(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setImage(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
     }
    
    /** @inheritdoc */
    @Override
    protected String updateKeyAfterInsert(StrategyGroupBean entity, long rowId) {
        return entity.getGroupId();
    }
    
    /** @inheritdoc */
    @Override
    public String getKey(StrategyGroupBean entity) {
        if(entity != null) {
            return entity.getGroupId();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
