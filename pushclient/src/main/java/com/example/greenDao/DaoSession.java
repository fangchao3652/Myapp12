package com.example.greenDao;

import android.database.sqlite.SQLiteDatabase;

import com.example.greenBean.BondedAreaBean;
import com.example.greenBean.BrandDetailBean;
import com.example.greenBean.CacheBean;
import com.example.greenBean.CategoryDetailBean;
import com.example.greenBean.CountryBean;
import com.example.greenBean.DistrictBean;
import com.example.greenBean.StrategyGroupBean;

import java.util.Map;


import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig districtBeanDaoConfig;
    private final DaoConfig categoryDetailBeanDaoConfig;
    private final DaoConfig brandDetailBeanDaoConfig;
    private final DaoConfig countryBeanDaoConfig;
    private final DaoConfig bondedAreaBeanDaoConfig;
    private final DaoConfig cacheBeanDaoConfig;
    private final DaoConfig strategyGroupBeanDaoConfig;

    private final DistrictBeanDao districtBeanDao;
    private final CategoryDetailBeanDao categoryDetailBeanDao;
    private final BrandDetailBeanDao brandDetailBeanDao;
    private final CountryBeanDao countryBeanDao;
    private final BondedAreaBeanDao bondedAreaBeanDao;
    private final CacheBeanDao cacheBeanDao;
    private final StrategyGroupBeanDao strategyGroupBeanDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        districtBeanDaoConfig = daoConfigMap.get(DistrictBeanDao.class).clone();
        districtBeanDaoConfig.initIdentityScope(type);

        categoryDetailBeanDaoConfig = daoConfigMap.get(CategoryDetailBeanDao.class).clone();
        categoryDetailBeanDaoConfig.initIdentityScope(type);

        brandDetailBeanDaoConfig = daoConfigMap.get(BrandDetailBeanDao.class).clone();
        brandDetailBeanDaoConfig.initIdentityScope(type);

        countryBeanDaoConfig = daoConfigMap.get(CountryBeanDao.class).clone();
        countryBeanDaoConfig.initIdentityScope(type);

        bondedAreaBeanDaoConfig = daoConfigMap.get(BondedAreaBeanDao.class).clone();
        bondedAreaBeanDaoConfig.initIdentityScope(type);

        cacheBeanDaoConfig = daoConfigMap.get(CacheBeanDao.class).clone();
        cacheBeanDaoConfig.initIdentityScope(type);

        strategyGroupBeanDaoConfig = daoConfigMap.get(StrategyGroupBeanDao.class).clone();
        strategyGroupBeanDaoConfig.initIdentityScope(type);

        districtBeanDao = new DistrictBeanDao(districtBeanDaoConfig, this);
        categoryDetailBeanDao = new CategoryDetailBeanDao(categoryDetailBeanDaoConfig, this);
        brandDetailBeanDao = new BrandDetailBeanDao(brandDetailBeanDaoConfig, this);
        countryBeanDao = new CountryBeanDao(countryBeanDaoConfig, this);
        bondedAreaBeanDao = new BondedAreaBeanDao(bondedAreaBeanDaoConfig, this);
        cacheBeanDao = new CacheBeanDao(cacheBeanDaoConfig, this);
        strategyGroupBeanDao = new StrategyGroupBeanDao(strategyGroupBeanDaoConfig, this);

        registerDao(DistrictBean.class, districtBeanDao);
        registerDao(CategoryDetailBean.class, categoryDetailBeanDao);
        registerDao(BrandDetailBean.class, brandDetailBeanDao);
        registerDao(CountryBean.class, countryBeanDao);
        registerDao(BondedAreaBean.class, bondedAreaBeanDao);
        registerDao(CacheBean.class, cacheBeanDao);
        registerDao(StrategyGroupBean.class, strategyGroupBeanDao);
    }
    
    public void clear() {
        districtBeanDaoConfig.getIdentityScope().clear();
        categoryDetailBeanDaoConfig.getIdentityScope().clear();
        brandDetailBeanDaoConfig.getIdentityScope().clear();
        countryBeanDaoConfig.getIdentityScope().clear();
        bondedAreaBeanDaoConfig.getIdentityScope().clear();
        cacheBeanDaoConfig.getIdentityScope().clear();
        strategyGroupBeanDaoConfig.getIdentityScope().clear();
    }

    public DistrictBeanDao getDistrictBeanDao() {
        return districtBeanDao;
    }

    public CategoryDetailBeanDao getCategoryDetailBeanDao() {
        return categoryDetailBeanDao;
    }

    public BrandDetailBeanDao getBrandDetailBeanDao() {
        return brandDetailBeanDao;
    }

    public CountryBeanDao getCountryBeanDao() {
        return countryBeanDao;
    }

    public BondedAreaBeanDao getBondedAreaBeanDao() {
        return bondedAreaBeanDao;
    }

    public CacheBeanDao getCacheBeanDao() {
        return cacheBeanDao;
    }

    public StrategyGroupBeanDao getStrategyGroupBeanDao() {
        return strategyGroupBeanDao;
    }

}
